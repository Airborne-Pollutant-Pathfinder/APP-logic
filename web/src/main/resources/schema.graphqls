scalar Duration

type Query {
    route(
        originLatitude: Float!,
        originLongitude: Float!,
        destinationLatitude: Float!,
        destinationLongitude: Float!,
        preferences: Preferences!,
        pedestrian: Boolean!,
    ): [Route]!

    sensorsWithData(
        northEastLatitude: Float!,
        northEastLongitude: Float!,
        southWestLatitude: Float!,
        southWestLongitude: Float!,
    ): [SensorData]!

    userNearHazardousArea(
        latitude: Float!,
        longitude: Float!,
        preferences: Preferences!,
    ): Boolean!
}

input Preferences {
    avoidHighways: Boolean!
    avoidTolls: Boolean!
    coThreshold: Float!
    no2Threshold: Float!
    o3Threshold: Float!
    pm2_5Threshold: Float!
    pm10Threshold: Float!
    so2Threshold: Float!
}

type Route {
    lengthInMeters: Float!
    travelTimeInSeconds: Duration!
    waypoints: [GeoLocation!]
}

type GeoLocation {
    latitude: Float!
    longitude: Float!
}

type SensorData {
    sensor: Sensor!
    data: [CapturedPollutant!]
}

type Sensor {
    location: GeoLocation!
    radiusInMeters: Float!
}

type CapturedPollutant {
    pollutant: String!
    value: Float!
}
